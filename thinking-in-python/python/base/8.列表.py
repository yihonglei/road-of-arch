######################## List（列表）#########################
"""
List（列表） 是 Python 中使用最频繁的数据类型。
列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。
列表是写在方括号([])之间、用逗号分隔开的元素列表。
和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。
列表截取的语法格式如下：
变量[头下标:尾下标]
索引值以 0 为开始值，-1 为从末尾的开始位置。
加号（+）是列表连接运算符，星号（*）是重复操作。
"""
list = ["one", "two", "three", "four"]
list2 = [123, "lanhuigu"]
print(list)
print(list[0])
print(list[1:3])  # 从某个下标位置开始(下标位置从0开始)，取到某个元素位置(元素位置从1开始)
print(list + list2)

for i in list:
    print(i)

######################## Set（集合）#########################
"""
集合（set）是一个无序不重复元素的序列。
基本功能是进行成员关系测试和删除重复元素。
可以使用大括号 { } 或者 set() 函数创建集合，注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。
创建格式：
parame = {value01,value02,...}
或者
set(value)
"""
lanhuigu = {'one', 'two', 'three', 'one', 'four', 'five'}   # 输出集合，重复的元素被自动去掉
print(lanhuigu)

# 成员测试
if ('one' in lanhuigu):
    print('one 在集合中')
else:
    print('one 不在集合中')

# set可以进行集合运算(差集、并集、交集、交集取反)
a = set('aaabbbcccddd')
b = set('aaafff')

print("a集合:", a)
print("b集合:", b)
print("a和b的差集:", a - b)
print("a和b的并集:", a | b)
print("a和b的交集:", a & b)
print("a和b中不同时存在的元素:", a ^ b)