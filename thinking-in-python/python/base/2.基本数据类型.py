# ==============================基本数据类型======================================
""""
Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
在 Python 中，变量就是变量，它没有类型，我们所说的"类型"是变量所指的内存中对象的类型。
等号（=）用来给变量赋值。
等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。
"""
counter = 10       # 整型变量
miles = 10.00      # 浮点型变量
name = "lanhuigu"  # 字符串

print(counter)
print(miles)
print(name)

"""
多个变量赋值:
Python中允许给多个变量赋值，同时也可以为多个对象指定多个变量
"""
a = b = c = 1
print(a,b,c)

a, b, c = 1, 2, "lanhuigu"
print(a, b, c)

# ==============================标准的数据类型======================================
"""
标准数据类型
Python3 中有六个标准的数据类型：
Number（数字）
String（字符串）
List（列表）
Tuple（元组）
Sets（集合）
Dictionary（字典）

Python3 的六个标准数据类型中：
不可变数据（四个）：Number（数字）、String（字符串）、Tuple（元组）、Sets（集合）；
可变数据（两个）：List（列表）、Dictionary（字典）。
"""
"""
##################B1-Number（数字）####################
"""
"""
Python3 支持 int、float、boolean、complex（复数）。
在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。
像大多数语言一样，数值类型的赋值和计算都是很直观的。
内置的 type() 函数可以用来查询变量所指的对象类型。
"""
a, b, c, d = 20, 5.5, True, 4+3j
print(a, b, c, d)
#  isinstance来判断变量类型
a = 111
b = isinstance(a, int)
print(b)
# del删除对象
var1 = 1
var2 = 2
print(var1, var2)
del var1
# print(var1) # NameError: name 'var1' is not defined
"""
#######################B2-String（字符串）#######################
"""
"""
Python中的字符串用单引号(')或双引号(")括起来，同时使用反斜杠(\)转义特殊字符。
字符串的截取的语法格式如下：
变量[头下标:尾下标]
索引值以 0 为开始值，-1 为从末尾的开始位置。
加号 (+) 是字符串的连接符， 星号 (*) 表示复制当前字符串，紧跟的数字为复制的次数。
"""
str = "lanhuigu"           # 输出字符串
print(len(str))            # 计算字符串长度
print(str[0:len(str)])     # 从0的位置取len长度字符串，这里取字符串

# ==============================常量和变量======================================
"""
二 常量

在程序中固定不变的值，在初始化后期，值不会发生改变，通常情况指的是我们创建得对象。

三 变量

指的是存放数据的一个容器。

变量特点：

1）变量需要定义名字，区分大小写，符合标识符的命名规范；

2）变量定义需要给赋初始值，否则不能调用；

3）对于变量来说，没有类型，但是对于变量中存放的对象，是有数据类型的；

     可以通过type函数查看对象的类型。
"""
